initSidebarItems({"enum":[["CvType","Here is the `CvType` in an easy-to-read table."],["FlipCode","A flag to specify how to flip the image. see Mat::flip"],["LineType","Line type"],["NormType","Normalization type. Please refer to OpenCVâ€™s documentation."],["TermType","Term criteria type, can be one of: Count, Eps or Count + Eps"]],"struct":[["KeyPoint","Data structure for salient point detectors"],["Point2f","2D floating points specified by its coordinates `x` and `y`."],["Point2i","2D integer points specified by its coordinates `x` and `y`."],["Rect","The `Rect` defines a rectangle in integer."],["Rect2f","The `Rect2f` are rectangles in float."],["RotatedRect","This struct represents a rotated (i.e. not up-right) rectangle. Each rectangle is specified by the center point (mass center), length of each side (represented by `Size2f`) and the rotation angle in degrees."],["Scalar","A 4-element struct that is widely used to pass pixel values."],["Size2f","`Size2f` struct is used for specifying the size of an image or rectangle with float dimensions."],["Size2i","`Size2i` struct is used for specifying the size of an image or rectangle with integer dimensions."],["TermCriteria","Termination criteria for iterative algorithms."]],"trait":[["FromBytes","Allow self deserialization from byte slice"]]});